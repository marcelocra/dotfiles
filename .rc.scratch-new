#!/usr/bin/env sh
# vim:tw=80:ts=4:sw=4:ai:et:ff=unix:fenc=utf-8:et:fixeol:eol:fdm=marker:fdl=0:fen:ft=sh
#
# Opens the `gnome-terminal` snapped to the right side of the screen when a configured shortcut is
# pressed (I use the `insert` key, but in the next comments I'll refer to it as <shortcut>).
#
# TODO
# ----
#
# - [ ] create alternative mappings to open the window snapped to the right, left or center
#
# - [ ] parameterize the terminal application and its required arguments
#
# Open this fold for more details. {{{
#
# Then, whenever you press <shortcut> one of three things will happen:
#
#   1. The first time you hit <shortcut>, it will open a new terminal window with tmux attached.
#
#   2. If you press <shortcut> again, that tmux session will be detached and the terminal window
#      will be closed.
#
#   3. If you press <shortcut> again, a new terminal window will be opened, but attached to the same
#      tmux session created in 1. Unless you kill this tmux session, whenever you press <shortcut>,
#      it will be used.
#
# Gotcha: if you do not press <shortcut> to close the scratch terminal window (e.g. you alt+tab away
# from it) and then press <shortcut>, it will close the existing (and unfocused) window, which might
# be confusing. Just press <shortcut> again :).
#
# System Font Selection
# =====================
#
# TODO: migrate this to somewhere else.
#
# Ordered as shown in the UI:
#
#   Default font:
#     gsettings get org.cinnamon.desktop.interface font-name
#
#   Desktop font:
#     gsettings get org.nemo.desktop font
#
#   Document font:
#     gsettings get org.gnome.desktop.interface document-font-name
#
#   Monospace font:
#     gsettings get org.gnome.desktop.interface monospace-font-name
#
#   Window title font:
#     gsettings get org.cinnamon.desktop.wm.preferences titlebar-font
#
# }}}
#

. $HOME/bin/.rc.common
THIS_FILE_DIRECTORY=$(get_this_file_dir "$0")

main() {
  scratch="${1:-scratch}"
  placement="right"

  # Get the default profile ID.
  profile_id=$(gsettings get org.gnome.Terminal.ProfilesList default | tr -d \')

  # Get the font setting for the default terminal profile.
  font=$(dconf read /org/gnome/terminal/legacy/profiles:/:$profile_id/font)

  # Extract the font family and its size.
  font_family=$(echo $font | sed -E -e "s/'([^0-9]+) [0-9]+'/\1/g")
  font_size=$(echo $font | grep -o '[0-9]\+')

  # Default values.
  columns=150
  rows=60

  # TODO: eventually I can play with this to figure the char width and height dynamically. Then
  # the rest of the commented stuff might help.
  # char_width=8
  # char_height=12

  if has_prefix "$font_family" 'Geist'; then
    if [ $font_size -eq 10 ]; then
      columns=157
      rows=81
    elif [ $font_size -eq 11 ]; then
      columns=139  # widescreen. In normal: ?
      rows=54
    elif [ $font_size -eq 8 ]; then
      columns=209  # widescreen. In normal: ?
      rows=84
    fi
  elif has_prefix "$font_family" 'Meslo'; then
    if [ $font_size -eq 13 ]; then
      columns=91
      rows=45
    elif [ $font_size -eq 11 ]; then
      columns=103
      rows=55
    elif [ $font_size -eq 10 ]; then
      columns=155  # widescreen. In normal: 115
      rows=60
    elif [ $font_size -eq 9 ]; then
      columns=131
      rows=65
    elif [ $font_size -eq 8 ]; then
      columns=209  # widescreen. In normal: ?
      rows=84
    fi
  elif has_prefix "$font_family" 'JetBrains'; then
    if [ $font_size -eq 10 ]; then
      columns=157  # widescreen. In normal: ?
      rows=60
    elif [ $font_size -eq 11 ]; then
      columns=139  # wide
      rows=55
    elif [ $font_size -eq 8 ]; then
      columns=209  # widescreen. In normal: ?
      rows=84
    fi
  elif has_prefix "$font_family" 'Cascadia Code NF'; then
    # Widescreen. Normal?
    if [ $font_size -eq 10 ]; then
      columns=156
      rows=62
    elif [ $font_size -eq 11 ]; then
      columns=104 # Notebook
      rows=57
    elif [ $font_size -eq 9 ]; then
      columns=179
      rows=70
    elif [ $font_size -eq 8 ]; then
      columns=209
      rows=84
    fi
  elif has_prefix "$font_family" 'Monaspace Neon Var'; then
    if [ $font_size -eq 9 ]; then
      columns=179
      rows=69
    fi
  fi

  # # Get the current screen resolution.
  resolution=$(xrandr | grep '*' | awk '{print $1}')
  screen_width=$(echo $resolution | cut -d'x' -f1)
  # screen_height=$(echo $resolution | cut -d'x' -f2)

  # Calculate half the screen width. `gnome-terminal` prioritizes the number of columns and rows
  # over starting point. Therefore, we can push the window all the way to the right and still have
  # it loading where we want if we get the correct values for rows and columns.
  half_width=$((screen_width))

  # # Convert pixel dimensions to terminal columns and rows using the estimated character dimensions.
  # columns=$((half_width / char_width))
  # rows=$((screen_height / char_height))

  debug "column:$columns | rows:$rows | width:$half_width"

  # Start gnome-terminal on the right half of the screen.
  cmd="gnome-terminal \
    --title 'scratchpad' \
    --hide-menubar \
    --geometry \"${columns}x${rows}+$half_width+0\" \
    -- sh $THIS_FILE_DIRECTORY/.rc.scratch-new2 $scratch"

  if is_debug; then
    debug "Would run the following command:\n\n$(echo "$cmd" | sed -E -e 's/ [ ]+/\n  /g')\n"
  else
    sh -c "$cmd"
  fi
}

main "$@"
