#!/usr/bin/env sh
# vim: fdm=marker:fmr=-{,}-:fdl=1:fen
#
# Utilities to use across shell scripts.
#

set -e

is_debug() {
  # If the variable is empty, we are not in debug mode.
  if [ -z "$MCRA_DEBUG" ]; then
    echo false
  else
    echo true
  fi
}

debug() {
  if [ "$(is_debug)" = 'false' ]; then
    return 0
  fi

  echo "[$(date '+%F %T')] $@"
}

error() {
  debug $1

  exit 1
}

has_prefix() {
  if [ $# -ne 2 ]; then
    error 'Usage: has_prefix "original string" "prefix to check".'
  fi

  if [ "${1#$2}" != "$1" ]; then
    # The `${1#$2}` substitution replaces $2 at the beginning of $1, making it different from
    # itself, hence entering this branch and confirming that $2 is a prefix on $1.
    echo true
  else
    echo false
  fi
}



# /////////////////////////////////////////////////////////////////////////
# Tests.
# /////////////////////////////////////////////////////////////////////////
#
# Functions are tested here, but ignored when debug is disabled.

# If not in debug mode, and we got here, success!
if [ "$(is_debug)" = 'false' ]; then
  return 0
fi

count=1

assert() {
  test_name=$1
  expected=$2
  actual=$3

  echo -n "$count $test_name: "
  if [ "$expected" != "$actual" ]; then
    echo -n 'fail'
  else
    echo -n 'success'
  fi

  echo

  count=$((count + 1))
}

assert "prefix match" $(has_prefix "hello world" "hello") true
assert "prefix doesn't match but string is there" $(! has_prefix "hello world" "world") false
assert "prefix doesn't match with different strings" $(! has_prefix "hello world" "not there") false
