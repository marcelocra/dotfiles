{
  // Place your snippets for elm here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "creates a port that sends json to JavaScript": {
    "prefix": [
      "port"
    ],
    "body": [
      "-- TODO: Add `port` to the beginning of the file: `port module Main exposing`.",
      "-- TODO: Install `elm/json` package: `elm install elm/json`.",
      "-- TODO: Remove these TODOs.",
      "",
      "",
      "type alias CommandToSendJs =",
      "    { command : String",
      "    , args : List String",
      "    }",
      "",
      "",
      "encodeCommandToSendJs : CommandToSendJs -> E.Value",
      "encodeCommandToSendJs toSend =",
      "    E.object",
      "        [ ( \"command\", E.string toSend.command )",
      "        , ( \"args\", E.list E.string toSend.args )",
      "        ]",
      "",
      "",
      "{-| Sends JSON messages to JavaScript.",
      "-}",
      "port sendJsonMessage : E.Value -> Cmd msg",
      "",
      "",
      "{-| Receives string messages from JavaScript.",
      "-}",
      "port messageReceiver : (String -> msg) -> Sub msg",
    ]
  },
  "documentation comment": {
    "prefix": [
      "doc",
      "comment"
    ],
    "body": [
      "{-| $1",
      "-}",
    ]
  },
}