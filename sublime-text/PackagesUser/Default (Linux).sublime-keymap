[
  //
  //
  // Clojure Sublimed start.
  //

  // Evaluate
  {
    "keys": ["ctrl+alt+enter"],
    "command": "clojure_sublimed_eval",
    "context": [
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.clojure"
      }
    ]
  },

  // Evaluate Buffer
  {
    "keys": ["ctrl+alt+b"],
    "command": "clojure_sublimed_eval_buffer",
    "context": [
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.clojure"
      }
    ]
  },

  // Interrupt Pending Evaluations
  {
    "keys": ["ctrl+alt+c"],
    "command": "clojure_sublimed_interrupt_eval",
    "context": [
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.clojure"
      }
    ]
  },

  // Toggle Info
  {
    "keys": ["ctrl+alt+i"],
    "command": "clojure_sublimed_toggle_info",
    "context": [
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.clojure"
      }
    ]
  },

  // Clear Evaluation Results
  {
    "keys": ["ctrl+alt+l"],
    "command": "clojure_sublimed_clear_evals",
    "context": [
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.clojure"
      }
    ]
  },

  // Extras

  // Look for .nrepl-port file and try connection to port in it
  {
    "keys": ["ctrl+alt+j"],
    "command": "clojure_sublimed_connect_nrepl_jvm",
    "args": { "address": "auto" }
  },

  // Toggle Stacktrace
  {
    "keys": ["ctrl+alt+e"],
    "command": "clojure_sublimed_toggle_trace",
    "context": [
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.clojure"
      }
    ]
  },

  // Toggle Symbol Info
  {
    "keys": ["ctrl+alt+d"],
    "command": "clojure_sublimed_toggle_symbol",
    "context": [
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.clojure"
      }
    ]
  },

  // Copy Evaluation Result
  {
    "keys": ["ctrl+c"],
    "command": "clojure_sublimed_copy",
    "context": [
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.clojure"
      }
    ]
  },

  // Reindent
  {
    "keys": ["ctrl+alt+f"],
    "command": "clojure_sublimed_reindent",
    "context": [
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.clojure"
      }
    ]
  },

  // Insert New Line
  {
    "keys": ["enter"],
    "command": "clojure_sublimed_insert_newline",
    "context": [
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.edn | source.clojure"
      },
      {
        "key": "auto_complete_visible",
        "operator": "equal",
        "operand": false
      },
      {
        "key": "panel_has_focus",
        "operator": "equal",
        "operand": false
      }
    ]
  },

  //
  //
  // End Clojure Sublimed.
  //
  // Global kbs.
  //

  {
    "keys": ["j", "f"],
    "command": "exit_insert_mode",
    "context": [
      { "key": "setting.command_mode", "operand": false },
      { "key": "setting.is_widget", "operand": false }
    ]
  },

  {
    "keys": ["f", "j"],
    "command": "exit_insert_mode",
    "context": [
      { "key": "setting.command_mode", "operand": false },
      { "key": "setting.is_widget", "operand": false }
    ]
  },

  { "keys": ["ctrl+shift+i"], "command": "reindent", "args": { "single_line": false } },

  { "keys": ["alt+b"], "command": "toggle_side_bar" },

  // Go to the next or previous tabs (respectively).
  { "keys": ["alt+k"], "command": "next_view" },
  { "keys": ["alt+j"], "command": "prev_view" },

  // Search symbols in current file.
  { "keys": ["ctrl+t"], "command": "show_overlay", "args": { "overlay": "goto", "text": "@" } },

  // Move lines up/down.
  { "keys": ["alt+up"], "command": "swap_line_up" },
  { "keys": ["alt+down"], "command": "swap_line_down" },

  // Expand selection. There's no shrink, so go back to starting position instead.
  { "keys": ["ctrl+shift+up"], "command": "expand_selection", "args": {"to": "smart"} },
  { "keys": ["ctrl+shift+down"], "command": "jump_back" },
]
