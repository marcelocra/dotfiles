#!/usr/bin/env sh
# vim:tw=80:ts=4:sw=4:ai:et:ff=unix:fenc=utf-8:et:fixeol:eol:fdm=marker:fdl=0:fen:
#
# Controls whether to create a new tmux session or re-open an existing one.

. $HOME/bin/.rc.common

mcra_logfile="$(mm_stderr)"

verify_requirements() {
    if [ $# -ne 1 ]; then
        fatal 'Accept only 1 argument, which will be the tmux session name.'
    fi

    local msg=''

    local tool='xdotool'
    if ! mm_is_command $tool; then
        msg="'$tool'"
    fi

    tool='xprop'
    if ! mm_is_command $tool; then
        msg="$msg, '$tool'"
    fi

    if [ "$msg" != "" ]; then
        fatal "Required tools not found: $msg"
    fi
}

verify_requirements "$@"

main() {
    local scratch="$1"

    # Get the active window ID.
    local active_window=$(xdotool getactivewindow)

    # Get the window name.
    local window_name=$(xprop -id "$active_window" WM_NAME)

    # Check if the window name is the one we defined.
    local term_focused=false
    case "$window_name" in
        *"scratchpad"*) term_focused=true ;;
    esac


    # TODO: allow additional scratch sessions to be created?
    # if [ ! -z "$MCRA_SCRATCH_SESSION_NAME" ]; then
    #   scratch="$MCRA_SCRATCH_SESSION_NAME"
    # fi
    #
    # TODO: try an alternative method, using the window id:
    #
    #   window_to_focus="$(xdotool search --limit 1 --name scratchpad)"
    #   xdotool windowactivate $window_to_focus
    #
    # Has the pottential problem that the command itself changes the name of the
    # window, but since this script is run without a window, perhaps it won't
    # have that problem.

    # If a session with that name does not exists, create it.
    if ! tmux has -t $scratch >/dev/null 2>&1; then
        tmux new -s $scratch >/dev/null 2>&1
        exit
    fi

    # If a session with that name exists, either it is focused or not.
    # When it is focused (term_focused=true), we simply detach from it, removing
    # the focus. When it is not focused (term_focused=false), we also need to
    # detach from it, so that reattaching will bring focus. This could be done
    # differently (see TODO above), but this works and is fast.
    tmux detach -s $scratch

    if ! $term_focused; then
        tmux attach -t $scratch >/dev/null 2>&1
    fi
}

main "$@"
