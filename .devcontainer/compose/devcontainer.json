{
  "name": "prj-compose",

  "dockerComposeFile": "https://raw.githubusercontent.com/marcelocra/dotfiles/main/docker-compose.yml",
  "service": "devcontainer",
  "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",

  "features": {
    // Pin feature versions for consistent builds.
    "ghcr.io/devcontainers/features/common-utils:2": {
      "username": "marcelo",
      "userUid": "1000",
      "userGid": "1000",
      // Skip package updates to speed up builds.
      "upgradePackages": "false",
      // Set your preferred shell.
      "configureZshAsDefaultShell": "true",
      // Install additional utilities.
      "installOhMyZsh": "true"
    }
  },

  // Set the default user for the container.
  "remoteUser": "marcelo",

  // Services will be available at these addresses from within the container:
  // - ollama:11434 (Ollama API)
  // - postgres:5432 (PostgreSQL)
  // - redis:6379 (Redis)
  // - mongodb:27017 (MongoDB, with --profile full)
  // - minio:9000 (MinIO, with --profile full)

  "containerEnv": {
    "TZ": "America/Sao_Paulo", // My preferred. Change as needed.

    // Most likely the default, but set explicitly, just in case. I had really
    // weird git locale issues because the container didn't have these set.
    "LC_ALL": "en_US.UTF-8",
    "LANG": "en_US.UTF-8"
  },

  // Port forwarding for development services.
  // Note: When using Docker Compose, services communicate via container networks.
  // Add ports here only if you need direct host access to container services.
  "forwardPorts": [
    // 11434 // Ollama API server for local LLM development.
  ],

  // Run setup script for container initialization.
  // This script handles SSH key setup, dotfiles installation, and environment configuration.
  "postCreateCommand": "curl -fsSL https://raw.githubusercontent.com/marcelocra/dotfiles/main/devcontainer-setup.sh | bash",

  // Stop all services when devcontainer stops.
  "shutdownAction": "stopCompose",

  "customizations": {
    "vscode": {
      "extensions": [
        // Python development.
        "charliermarsh.ruff",
        "ms-python.python",

        // JavaScript/TypeScript development.
        "dbaeumer.vscode-eslint",
        "denoland.vscode-deno",
        "esbenp.prettier-vscode",

        // Git and version control.
        "eamodio.gitlens",

        // Code formatting and standards.
        "EditorConfig.EditorConfig",

        // GitHub integration.
        "GitHub.codespaces",
        "GitHub.copilot-chat",
        "GitHub.copilot",
        "GitHub.github-vscode-theme",
        "GitHub.vscode-pull-request-github",

        // Container and Docker support.
        "ms-azuretools.vscode-containers",
        "ms-azuretools.vscode-docker",

        // Remote development support.
        "ms-vscode-remote.remote-containers",
        "ms-vscode-remote.remote-ssh-edit",
        "ms-vscode-remote.vscode-remote-extensionpack",

        // Accessibility and language support.
        "ms-vscode.vscode-speech-language-pack-pt-br",
        "ms-vscode.vscode-speech"
      ]
    }
  }
}
